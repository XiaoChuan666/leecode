# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
'''

不同于往常的dfs，这次我们从右边开始遍历二叉树。

'''
class Solution(object):
    def rightSideView(self, root):
        if root == None:
            return []
        now = [0,0]
        result = [root.val]
        def dfs(root):
            if root.left == None and root.right == None:
                return
            if root.right != None:
                now[0] += 1
                if now[0] >= now[1]+1:
                    now[1] += 1
                    result.append(root.right.val)
                dfs(root.right)
                now[0] -= 1
            if root.left != None:
                now[0] += 1
                if now[0] >= now[1]+1:
                    now[1] += 1
                    result.append(root.left.val)
                dfs(root.left)
                now[0] -= 1
        dfs(root)
        return result
