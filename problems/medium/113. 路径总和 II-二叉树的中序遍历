# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
'''

二叉树的中序遍历。

'''
class Solution(object):
    def pathSum(self, root, sum):
        if root == None:
            return []
        result = []
        def backtrack(root, arr, count):
            if root.left == None and root.right == None:
                arr.append(root.val)
                if count + root.val == sum:
                    result.append([])
                    result[-1].extend(arr)
                arr.pop()
                return
            if root.left != None:
                arr.append(root.val)
                count += root.val
                backtrack(root.left, arr, count)
                count -= root.val
                arr.pop()
            if root.right != None:
                arr.append(root.val)
                count += root.val
                backtrack(root.right, arr, count)
                count -= root.val
                arr.pop()
        backtrack(root, [], 0)
        return result
